{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "ICOS",
    "description" : "Access to data and metadata from the european Integrated Carbon Observation\nSystem, ICOS. The Carbon Portal is a one stop shop for european high quality\ngreenhouse gas measurements.\n\nThis API is for users who like to have an easy access to the most common\ndata objects and information about the research stations. Please note, \nthat not all of the data objects and information is available through the API.\nFor example we server only Level 2 data objects.\nIf in doubt, please visit https://www.icos-cp.eu/about-icos-data to learn more.\n",
    "contact" : {
      "name" : "ICOS Carbon Portal",
      "url" : "https://www.icos-cp.eu",
      "email" : "info@icos-cp.eu"
    },
    "license" : {
      "name" : "GNU AGPLv3",
      "url" : "https://www.gnu.org/licenses/agpl.txt"
    },
    "version" : "0.1.0"
  },
  "servers" : [ {
    "url" : "http://127.0.0.1:9090/api",
    "description" : "local development server"
  } ],
  "paths" : {
    "/collections" : {
      "summary" : "Return a list of data collections.",
      "description" : "A collection is a manually created assembly of data objects\nfor a specific theme, project or area of interest.\n\n",
      "get" : {
        "tags" : [ "find" ],
        "summary" : "A list of data collections",
        "description" : "No parameters returns a list of collection id's with a short description\nfor each collection (what kind of data is included, size, data object id's.)",
        "operationId" : "icoscp.find_collections",
        "responses" : {
          "200" : {
            "description" : "data collection"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "query",
        "description" : "Collection id returns a list of data object descriptors,\nincluded in a specific collection.\n",
        "schema" : { }
      }, {
        "name" : "limit",
        "in" : "query",
        "description" : "limit the amount of entries returned. Very useful to test your query before you possibly get a list of thousands fo entries.",
        "schema" : {
          "type" : "integer"
        }
      } ]
    },
    "/download" : {
      "summary" : "Download data.",
      "description" : "Here you have acces to the measurements.\nYou can provide a single data object ID, or an array of ID's to download\nmultiple files with one call. You can retrieve the identifiers while searching\nfor datasets with (api/data/?format=list). See /api/data for more information.\n\nExample for single file download: \napi/download?id=123456\n\nExample for multi file download:\napi/download?id=[123456, 789123, 456123]",
      "get" : {
        "tags" : [ "download" ],
        "summary" : "Download data",
        "description" : "Download specific data objects.",
        "operationId" : "icoscp.get_data",
        "responses" : {
          "200" : {
            "description" : "download completed"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "query",
        "description" : "Please provide an array of digital object identifiers (PID) as single\nargument for one file, or an array for multiple files\nExample single file: /api/downlad?id=123456\nExample multi file: /api/downlad?id=[123456, 4362346, 32452345+, 1325415432lk3]\n",
        "required" : true,
        "schema" : { }
      } ]
    },
    "/stations" : {
      "summary" : "Return a list of certified ICOS stations.",
      "description" : "A data collection is a group of data object as an official ICOS release.\nContaining QA/QC observations from certified ICOS stations.",
      "get" : {
        "tags" : [ "find" ],
        "summary" : "A list of ICOS stations",
        "description" : "without any parameters returns a list of all labeled and certified ICOS stations.",
        "operationId" : "icoscp.find_stations",
        "responses" : {
          "200" : {
            "description" : "ICOS certified stations"
          }
        }
      },
      "parameters" : [ {
        "name" : "country",
        "in" : "query",
        "description" : "Returns a list of stations for a specific country.\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#WO",
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "id",
        "in" : "query",
        "description" : "Return the metadata about an ICOS station. The same information as seen online at the \"landing page\".\nThe landing page URL is returned with the parameter \"url\"",
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "theme",
        "in" : "query",
        "description" : "ICOS has three main distinction of themes, where green hous gas measurments are collected:\nOTC (Ocean), ETC (Ecosystem), ATC (Atmosphere).\n",
        "schema" : {
          "enum" : [ "ATC", "ETC", "OTC" ]
        }
      }, {
        "name" : "bb",
        "in" : "query",
        "description" : "BoundingBox. If you provide latitude and longitude of the top left corner and bottom right corner of a box, you will get a list of icos stations within that box.\nExample: api/stations?bb=[50,-10, 30, 15]",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        }
      } ]
    },
    "/stations/provisional" : {
      "summary" : "Return a list if stations currently in the labeling process.",
      "get" : {
        "tags" : [ "find" ],
        "summary" : "Povisional ICOS stations",
        "description" : "get a list of icos stations in the labeling process",
        "operationId" : "icoscp.find_provisional_stations",
        "responses" : {
          "200" : {
            "description" : "provisional icos stations"
          }
        }
      },
      "parameters" : [ {
        "name" : "country",
        "in" : "query",
        "description" : "Returns a list of stations for a specific country.\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#WO",
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "theme",
        "in" : "query",
        "description" : "ICOS has three main distinction of themes, where green hous gas measurments are collected:\nOTC (Ocean), ETC (Ecosystem), ATC (Atmosphere).\n",
        "schema" : {
          "enum" : [ "ATC", "ETC", "OTC" ]
        }
      } ]
    },
    "/download/citation" : {
      "summary" : "Download citation.",
      "description" : "Download citation only. By default a 'BibTex' string is provided. Alternative\nformats are available with the parameter ?format=",
      "get" : {
        "tags" : [ "download" ],
        "summary" : "Download citation",
        "description" : "Download citation for a single specific data object. By default a \"BibTex\" file, \nalternative formats are available with the paramater ?format=",
        "operationId" : "icoscp.get_citation",
        "responses" : {
          "200" : {
            "description" : "ICOS_citation_downlaod"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "query",
        "description" : "provide a single data object id",
        "required" : true,
        "schema" : { }
      }, {
        "name" : "format",
        "in" : "query",
        "description" : "Please define the desired format for the ctiation. If the parameter is not \nset, by default a \"Bibtex\" format is provided.",
        "required" : false,
        "schema" : {
          "enum" : [ "BibTex", "Txt", "Json", "XML", "RisFormat" ]
        }
      } ]
    },
    "/download/metadata" : {
      "summary" : "Download metadata",
      "description" : "Download metadata only. By default a \"json\" object is provided. Alternative\nformat are available with the paramater ?format=",
      "get" : {
        "tags" : [ "download" ],
        "summary" : "Download metadata",
        "description" : "Download metadata for a specific single data object. By default the \nformat is a \"json\" object, but alternative formats are provided by setting\nthe paramater ?format=\n",
        "operationId" : "icoscp.get_metadata",
        "responses" : {
          "200" : {
            "description" : "ICOS_metadata_download"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "query",
        "description" : "Id for a single specific data object.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "format",
        "in" : "query",
        "description" : "By default a json string is provided. Alternative you can choose a different\nformat. ",
        "schema" : {
          "enum" : [ "json", "xml", "txt", "turtle" ]
        }
      } ]
    },
    "/find" : {
      "summary" : "Return a list of data objects.",
      "description" : "ICOS provides access to high quality greenhouse gas measurements across europe.\nYou may download and use  data for free, but don't forget to cite where the data\nis coming from.\n\n!! BE  AWARE \n\nThe ICOS API delivers only \"Level 2\" data objects by default.\nNear realtime data, raw data, etc is not supported with the REST API.\nYou can search for them in the online data portal. Please visit\nhttps://www.icos-cp.eu/data\n",
      "get" : {
        "tags" : [ "find" ],
        "summary" : "A list of data objects",
        "description" : "Download a list of data objects or if you provide a valid data object ID, you\nget the information about that specific digital object.\nIf you don't set the paramater \"limit\", by default we set a limit of 25. \nIf you want \"all\" you need to set limit to -1. But be very careful, we have\nthousands of data objects.",
        "operationId" : "icoscp.find_data",
        "responses" : {
          "200" : {
            "description" : "data object information"
          }
        }
      },
      "parameters" : [ {
        "name" : "bb",
        "in" : "query",
        "description" : "BoundingBox. If you provide latitude and longitude of the top left corner and bottom right corner of a box, you will get a list of icos stations within that box.\nExample: api/stations?bb=[50,-10, 30, 15]",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        }
      }, {
        "name" : "country",
        "in" : "query",
        "description" : "Returns a list of stations for a specific country.\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#WO",
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "id",
        "in" : "query",
        "description" : "Provide a valid digital object id. In return you will get the meta data\ninformation about the dataset. If yo want to download the data itself \nincluding the meta data, you need to call /api/download?id=1234",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "theme",
        "in" : "query",
        "description" : "This is a filter for data belonging to:\n- ATC (atmosphere)\n- ETC (ecosystem)\n- OTC (ocean)",
        "schema" : {
          "enum" : [ "ATC", "ETC", "OTC" ]
        }
      }, {
        "name" : "startDate",
        "in" : "query",
        "description" : "The measurement/observation data first time stamp is...yyyymmdd\n",
        "required" : false,
        "schema" : {
          "type" : "integer"
        }
      }, {
        "name" : "endDate",
        "in" : "query",
        "description" : "The measurement/observation data last time stamp is...yyyymmdd",
        "schema" : {
          "type" : "integer"
        }
      }, {
        "name" : "variable",
        "in" : "query",
        "description" : "This is a full list of variables collected from the ICOS stations.\nDepending on the THEME and CLASS of the station, not all the variables are\navailable.",
        "required" : false,
        "schema" : {
          "enum" : [ "OTC_Sea_surface_fCO2", "OTC_Water_vapour_pressure", "OTC_Atmospheric_xCO2", "ETC_CO2_fluxes", "ETC_CH4_fluxes", "ETC_N2O_fluxes", "ETC_Soil_Heat_fluxes", "ETC_Soil_CO2_automatic_chambers", "ATC_CO2", "ATC_CH4", "ATC_CO", "ATC_Air_temperature", "ATC_Relative_humidity", "ATC_Wind_direction" ]
        }
      }, {
        "name" : "limit",
        "in" : "query",
        "description" : "You can limit the returned list to N entries.\n",
        "schema" : {
          "type" : "integer"
        }
      }, {
        "name" : "stationId",
        "in" : "query",
        "description" : "You can search for data measured at a specific station.",
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "format",
        "in" : "query",
        "description" : "By default you will get a list with meta data about the data objects.\nIf you choose the output to be format=list\nyou will get an array back, which can be used in the downlad part.\nYou may feed this output directly into /api/download?id=list\n",
        "schema" : {
          "enum" : [ "list" ]
        }
      } ]
    }
  },
  "tags" : [ {
    "name" : "ICOS",
    "description" : "Integrated Carbon Obeservation System"
  } ]
}